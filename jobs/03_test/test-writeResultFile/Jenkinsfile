#!groovy

@Library('jenkins-common-lib') _

node('master') { timestamps
{
    stage('前提条件')
    {
        // 書込対象のファイル
        temp = ['path':'/opt/var/jenkins/temp', 'file':'result_test-case-1.yml']
        // ファイルが存在していた場合、削除
        File f = new File(temp['path'] + "/" + temp['file'])
        if(f.exists())
        {
            f.delete()
        }
        // 書込対象のファイル
        temp = ['path':'/opt/var/jenkins/temp', 'file':'result_test-case-2.yml']
        // ファイルが存在していた場合、削除
        File ff = new File(temp['path'] + "/" + temp['file'])
        if(ff.exists())
        {
            ff.delete()
        }
    }
    stage('test-case-1')
    {
        printMsg('info', '期待する動作：引数で渡した変数がファイルの書き出しに成功すること。')
        try
        {
            result = ['webap': 'faital']
            writeResultFile(result, 'test-case-1')
        }
        catch(Exception e) {
            println 'result: NG'
            throw e
        }
        println 'result: OK'
    }
    stage('test-case-2')
    {
        printMsg('info', '期待する動作：引数で渡した変数がファイルの書き出しに成功すること。')
        try
        {
            server = 'batch'
            result = ["${server}": 'warning']
            writeResultFile(result, 'test-case-2')
        }
        catch(Exception e) {
            println 'result: NG'
            throw e
        }
        println 'result: OK'
    }
    stage('test-case-3')
    {
        printMsg('info', '期待する動作：既に存在しているファイルは削除され、新たに引数に渡した変数でファイルの書き出しに成功すること。')
        try
        {
            server = 'batch'
            result = ["${server}": 'nomal']
            writeResultFile(result, 'test-case-2')
        }
        catch(Exception e) {
            println 'result: NG'
            throw e
        }
        println 'result: OK'
    }
    stage('test-case-4')
    {
        printMsg('info', '期待する動作：改行を含んでいる変数を引数で渡してもファイルの書き出しに成功すること。')
        try
        {
            result = ['stodout': 'nomal\nwarning']
            writeResultFile(result, 'test-case-2')
        }
        catch(Exception e) {
            println 'result: NG'
            throw e
        }
        println 'result: OK'
    }
}}
